% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proxy.R
\name{proxy-series}
\alias{proxy-series}
\alias{uSetSeries}
\alias{uAddSeries}
\alias{uDelSeries}
\title{Update chart series}
\usage{
uSetSeries(uplot, seriesIdx, show = NULL, focus = NULL)

uAddSeries(uplot, seriesIdx, ...)

uDelSeries(uplot, seriesIdx)
}
\arguments{
\item{uplot}{Chart created with \code{\link[=uPlot]{uPlot()}} or \code{\link[=uProxy]{uProxy()}}.}

\item{seriesIdx}{Index of the serie to set.}

\item{show, focus}{Toggles series visibility or focus.}

\item{...}{Options for the series, see \code{\link[=uSeries]{uSeries()}}.}
}
\value{
An \code{htmlwidget} object of class \code{"uPlot"} or a \code{uProxy} object.
}
\description{
Update chart series
}
\examples{
uPlot() \%>\%
 uSetData(temperatures)

# Toggle visibility with Proxy --------------------------------------------

library(shiny)
library(uPlot)

ui <- fluidPage(
  tags$h3("uPlot update series with proxy"),
  fluidRow(
    column(
      width = 4,
      checkboxGroupInput(
        inputId = "serie",
        label = "Show series",
        choices = names(eco2mix)[-c(1, 2)],
        selected = "fuel"
      )
    ),
    column(
      width = 8,
      uPlotOutput(outputId = "plot", height = "500px")
    )
  )
)

server <- function(input, output, session) {

  output$plot <- renderUPlot({
    uPlot(data = eco2mix[1:1500, -2]) \%>\%
      uSeries(serie = "fuel", show = TRUE) \%>\%
      uSeries(serie = "coal", show = FALSE) \%>\%
      uSeries(serie = "gas", show = FALSE) \%>\%
      uSeries(serie = "nuclear", show = FALSE) \%>\%
      uSeries(serie = "wind", show = FALSE) \%>\%
      uSeries(serie = "solar", show = FALSE) \%>\%
      uSeries(serie = "hydraulic", show = FALSE) \%>\%
      uSeries(serie = "pumping", show = FALSE) \%>\%
      uSeries(serie = "bioenergies", show = FALSE)
  })

  observeEvent(input$serie, {
    series <- names(eco2mix)[-c(1, 2)]
    for (idx in seq_along(series)) {
      uProxy("plot") \%>\%
        uSetSeries(
          seriesIdx = idx + 1, # +1 because because first serie is datetime
          show = series[idx] \%in\% input$serie
        )
    }
  }, ignoreInit = TRUE, ignoreNULL = FALSE)

}

if (interactive())
  shinyApp(ui, server)
# Toggle visibility with Proxy --------------------------------------------

library(shiny)
library(uPlot)

ui <- fluidPage(
  tags$h3("uPlot update series with proxy"),
  fluidRow(
    column(
      width = 4,
      textInput(
        inputId = "label",
        label = "Label:",
        value = "Consumption"
      ),
      selectInput(
        inputId = "stroke",
        label = "Stroke color:",
        choices = c("firebrick", "steelblue", "forestgreen", "goldenrod")
      ),
      actionButton("update", "Update plot")
    ),
    column(
      width = 8,
      uPlotOutput(outputId = "plot", height = "500px")
    )
  )
)

server <- function(input, output, session) {

  output$plot <- renderUPlot({
    uPlot(data = eco2mix[1:1500, c(1, 2)]) \%>\%
      uSeries("consumption", label = "Consumption", stroke = "firebrick")
  })

  observeEvent(input$update, {
    uProxy("plot") \%>\%
      # First delete existing serie
      uDelSeries(seriesIdx = 2) \%>\%
      # Then add with new parameters
      uAddSeries(
        seriesIdx = 2,
        label = input$label,
        stroke = input$stroke
      ) \%>\%
      uRedraw(rebuildPaths = TRUE, recalcAxes = FALSE)
  })

}

if (interactive())
  shinyApp(ui, server)
}
